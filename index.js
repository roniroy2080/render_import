const server=require("http").createServer(),io=require("socket.io")(server,{cors:"https://roniroy2080.github.io/video/"}),PORT=6500;server.listen(PORT,()=>console.log(`We Are Live At PORT : ${PORT}`)),io.on("connection",e=>{e.on("leave:room",o=>{let{room_id:t,name:r}=o;e.broadcast.to(t).emit("other:leave:room",r),e.leave(t)}),e.on("joining:room",o=>{let{to:t,name:r,uuid:n}=o,s=io.sockets.adapter.rooms;null==s.get(t)?(e.join(t),io.to(t).emit("i:joined:successfully")):1==s.get(t).size?(e.join(t),e.broadcast.to(t).emit("other:joined:room",r)):2==s.get(t).size&&(e.join(t+n),io.to(t+n).emit("room:full",n),console.log(s),setTimeout(()=>{e.leave(t+n),console.log("leaves"),console.log(s)},1500))}),e.on("other:joined:success",o=>{let{name:t,to:r,offer:n}=o;e.broadcast.to(r).emit("other:joined:room:success",{name:t,offer:n})}),e.on("answer:server",o=>{let{answer:t,to:r}=o;e.broadcast.to(r).emit("answer:client",t)}),e.on("nego:offer:server",o=>{let{to:t,offer:r}=o;e.broadcast.to(t).emit("nego:offer:client",r)}),e.on("nego:answer:server",o=>{let{to:t,answer:r}=o;e.broadcast.to(t).emit("nego:answer:client",r)})});
